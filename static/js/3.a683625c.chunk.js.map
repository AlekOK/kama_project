{"version":3,"sources":["components/Dialogs/dialogs.module.css","components/Dialogs/Message/message.jsx","components/Dialogs/DialogItem/dialogitem.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx"],"names":["module","exports","Message","props","className","sss","dialog","active","message","Dialogs_Item","to","id","activeClassName","activeLink","name","maxLength20","maxLegnthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","postBlock","Field","component","Textarea","validate","required","placeholder","Dialogs","dialog_elements","dialogsPage","dialog_data","map","el","key","message_elements","message_data","dialogs","dialog_item","messages","values","addNewMessage","newMessageText","compose","connect","state","isAuth","auth","dispatch","addMessageAction","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,OAAS,wBAAwB,OAAS,wBAAwB,WAAa,4BAA4B,UAAY,6B,uFCUzOC,EARH,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAIC,OAAQ,IAAKD,IAAIE,QACjC,yBAAKH,UAAWC,IAAIC,QAASH,EAAMK,W,QCMhCC,EARM,SAACN,GAClB,OACI,yBAAKC,UAAaC,IAAIC,QAClB,kBAAC,IAAD,CAASI,GAAK,aAAeP,EAAMQ,GAAKC,gBAAiBP,IAAIQ,YAAaV,EAAMW,Q,kCC+BtFC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,WAAjBD,EAfL,SAACf,GACpB,OACI,0BAAMiB,SAAWjB,EAAMkB,cACnB,yBAAKjB,UAAWC,IAAIiB,WAChB,kBAACC,EAAA,EAAD,CAAOC,UAAYC,IACZX,KAAO,iBACPY,SAAW,CAACC,IAAUZ,GACtBa,YAAc,uBAEzB,6BAAK,qDAQFC,EAhDC,SAAC1B,GAEjB,IAAI2B,EAAkB3B,EAAM4B,YAAYC,YAAYC,KAAK,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAcvB,GAAIuB,EAAGvB,GAAIwB,IAAKD,EAAGvB,GAAIG,KAAMoB,EAAGpB,UACzGsB,EAAmBjC,EAAM4B,YAAYM,aAAaJ,KAAK,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAS1B,QAAS0B,EAAG1B,QAAS2B,IAAKD,EAAGvB,QAOlG,OAEG,yBAAKP,UAAWC,IAAIiC,SAEhB,yBAAKlC,UAAWC,IAAIkC,aACfT,GAGL,yBAAK1B,UAAWC,IAAImC,UACfJ,GAGL,kBAACnB,EAAD,CAAqBG,SAhBT,SAACqB,GACrBtC,EAAMuC,cAAcD,EAAOE,qB,wBCKhBC,sBACXC,aAhBkB,SAACC,GACnB,MAAO,CACHf,YAAae,EAAMf,YACnBgB,OAAQD,EAAME,KAAKD,WAIF,SAACE,GACtB,MAAO,CACHP,cAAe,SAACC,GACZM,EAASC,YAAiBP,SAOlCQ,IAFWP,CAGbf","file":"static/js/3.a683625c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__F7A9U\",\"dialog_item\":\"dialogs_dialog_item__2agOa\",\"messages\":\"dialogs_messages__Q7J9C\",\"dialog\":\"dialogs_dialog__1moQV\",\"active\":\"dialogs_active__1fQMi\",\"activeLink\":\"dialogs_activeLink__2MYcn\",\"postBlock\":\"dialogs_postBlock__19hOo\"};","import React from 'react';\r\nimport sss from './../dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={sss.dialog +' '+ sss.active}>\r\n            <div className={sss.dialog}>{props.message}</div>\r\n        </div>    \r\n        );\r\n    };\r\n\r\n    export default Message; ","import React from 'react';\r\nimport sss from './../dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialogs_Item = (props) => {\r\n    return (\r\n        <div className = {sss.dialog }>\r\n            <NavLink to={ \"/messages/\" + props.id } activeClassName={sss.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default Dialogs_Item; ","import React from 'react';\r\nimport sss from './dialogs.module.css';\r\nimport Message from './Message/message';\r\nimport Dialogs_Item from './DialogItem/dialogitem';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from '../Common/FormsControls/formControlsTextArea';\r\nimport { required, maxLegnthCreator } from '../../utils/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    \r\nlet dialog_elements = props.dialogsPage.dialog_data.map (el => <Dialogs_Item id={el.id} key={el.id} name={el.name} />)  ;  \r\nlet message_elements = props.dialogsPage.message_data.map (el => <Message message={el.message} key={el.id} /> ); \r\n\r\n\r\nlet addNewTextMessage = (values) => {\r\n    props.addNewMessage(values.newMessageText)\r\n};\r\n\r\n     return (\r\n\r\n        <div className={sss.dialogs}>\r\n\r\n            <div className={sss.dialog_item}>\r\n                {dialog_elements}\r\n            </div>\r\n\r\n            <div className={sss.messages}>\r\n               { message_elements }\r\n            </div>\r\n        \r\n            <AddMessageReduxForm onSubmit= {addNewTextMessage} /> \r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst maxLength20 = maxLegnthCreator(20);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit= {props.handleSubmit}>\r\n            <div className={sss.postBlock}>\r\n                <Field component= {Textarea} \r\n                       name= {\"newMessageText\"}\r\n                       validate= {[required, maxLength20]} \r\n                       placeholder= {\"Add your messages\"}/>\r\n            </div>\r\n            <div><button>Send message</button></div> \r\n        </form>\r\n    )\r\n\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({form: \"message\"})(AddMessageForm);\r\n\r\nexport default Dialogs; ","import { addMessageAction } from '../../redux/dialogs_reducer';\r\nimport Dialogs from './dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../HOC/withauthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: (newMessageText) => {\r\n            dispatch(addMessageAction(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs); "],"sourceRoot":""}